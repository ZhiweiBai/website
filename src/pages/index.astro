---
import type { ImageMetadata } from 'astro'
import { getCollection } from 'astro:content'
import BackToTopButton from '../components/BackToTopButton'
import BaseHead from '../components/BaseHead.astro'
import Body from '../components/Body.astro'
import Content from '../components/Content.astro'
import Footer from '../components/Footer.astro'
import FormattedDate from '../components/FormattedDate.astro'
import Header from '../components/Header.astro'
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardTitle,
} from '../components/ui/card'
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts'

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/thumbnails/*.{jpeg,jpg,png,gif}'
)

const findKeysByValue = (imgs: any, id: string) => {
  return Object.keys(imgs).filter(key => key.includes(id + '_thumbnail'))
}

const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
)

// Resolve all images for posts
const postsWithImages = await Promise.all(
  posts.map(async (post: any) => {
    const matchingKeys = findKeysByValue(images, post.id)
    const heroImageAsset =
      matchingKeys.length > 0 ? images[matchingKeys[0]] : null
    let heroImageSrc

    if (heroImageAsset) {
      try {
        const loadedImage = await heroImageAsset()
        heroImageSrc = loadedImage.default
      } catch (error) {
        console.error(`Error loading thumbnail for ${post.id}:`, error)
        heroImageSrc = post.data.heroImage
      }
    } else {
      heroImageSrc = post.data.heroImage
    }

    return {
      ...post,
      resolvedHeroImage: heroImageSrc,
    }
  })
)
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header title={SITE_TITLE} />
    <main class="pt-[56px]">
      <Content className="mt-15">
        <section>
          <h1 class="text-center">Deep Learning Phenomena</h1>
          <p class="indent-8">
            Deep learning has achieved great success, but understanding how it
            works is essential for building better and safer AI systems. Deep
            learning is a highly complex system. Studying phenomena—observable
            patterns in experiments—is a key way to understand such complexity.
            This approach mirrors how scientists study nature: through
            controlled experiments, they discover empirical laws that guide
            theory, which in turn leads to deeper understanding and useful
            technology. This project collects important phenomena in deep
            learning and provides a platform for researchers to share and
            discuss their findings. By gathering well-documented phenomena with
            reproducible experiments, we aim to help researchers identify open
            questions, connect theory with practice, and advance the field
            together.
          </p>
        </section>
        <hr />
        <section class="prose-ul:list-none prose-ul:-ml-4">
          <ul class="grid grid-cols-1 gap-6 md:grid-cols-2 md:items-stretch">
            {
              postsWithImages.map((post: any) => {
                return (
                  <li>
                    <a href={`/blog/${post.id}/`}>
                      <Card className="h-full">
                        <CardHeader>
                          <CardTitle className="text-xl font-bold">
                            {post.data.title}
                          </CardTitle>
                        </CardHeader>
                        <CardContent>
                          {post.data.description && (
                            <div class="opacity-70">
                              {post.data.description}
                            </div>
                          )}
                        </CardContent>
                        <CardFooter>
                          <p class="date font-mono text-xs opacity-70">
                            <FormattedDate date={post.data.pubDate} />
                          </p>
                        </CardFooter>
                      </Card>
                    </a>
                  </li>
                )
              })
            }
          </ul>
        </section>
      </Content>
    </main>
    <BackToTopButton client:idle />
    <Footer />
  </Body>
</html>
