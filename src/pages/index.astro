---
import type { ImageMetadata } from 'astro'
import BaseHead from '../components/BaseHead.astro'
import Body from '../components/Body.astro'
import Content from '../components/Content.astro'
import Footer from '../components/Footer.astro'
import Header from '../components/Header.astro'
import { SITE_DESCRIPTION, SITE_TITLE } from '../config'
import { Image } from 'astro:assets'
import CreatedWithSection from '../components/CreatedWithSection.astro'
import Masthead from '../components/Masthead.astro'
import { getCollection } from 'astro:content'
import FormattedDate from '../components/FormattedDate.astro'

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/thumbnails/*.{jpeg,jpg,png,gif}'
)

const findKeysByValue = (imgs: any, id: string) => {
  return Object.keys(imgs).filter(key => key.includes(id))
}

const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
)
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header title={SITE_TITLE} />
    <main class="pt-[56px]">
      <Masthead />
      <Content>
        <section>
          <p class="mb-8 indent-4">
            I am a tenure-track associate professor at the School of
            Mathematical Sciences, Shanghai Jiao Tong University. My research
            interests include Computational Mathematics and Machine Learning. I
            am particularly interested in the design and implementation of AI
            inspired numerical algorithms for scientific problems, such as
            solving kinetic equations, high-dimensional PDEs, and inverse
            problems.
            <!-- <a
              class="inline-flex items-center gap-1 indent-1 text-orange-500"
              href={HOMEPAGE_URL}
              >Learn more about me <IoArrowForward className="inline" />
            </a> -->
          </p>
        </section>
        <section>
          <ul class="grid grid-cols-1 gap-4 md:grid-cols-2">
            {
              posts.map((post: any) => {
                const heroImageAsset =
                  images[findKeysByValue(images, post.id)[0]]
                const heroImageSrc = heroImageAsset
                  ? heroImageAsset()
                  : post.data.heroImage
                console.log('image:', heroImageAsset)
                return (
                  <li class="mb-4 text-center">
                    <a href={`/blog/${post.id}/`}>
                      <Image
                        class="rounded-xl border border-slate-300 dark:border-zinc-700"
                        src={heroImageAsset()}
                        width={720}
                        height={720 / 1.777}
                        alt="Thumbnail"
                      />
                      <div class="mt-3 text-xl font-bold">
                        {post.data.title}
                      </div>
                      {post.data.description && (
                        <div class="opacity-70">{post.data.description}</div>
                      )}
                      <p class="date font-mono text-xs opacity-70">
                        <FormattedDate date={post.data.pubDate} />
                      </p>
                    </a>
                  </li>
                )
              })
            }
          </ul>
        </section>
        <CreatedWithSection />
      </Content>
    </main>
    <Footer />
  </Body>
</html>
